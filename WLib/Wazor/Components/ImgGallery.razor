@using Wazor.Models
<!-- ImageGallery -->
<h3>ImageGallery</h3>
@if (DisplayedImages == null || !DisplayedImages.Any())
{
    <p>No images to display.</p>
}
else
{
    <div class="image-gallery">
        @foreach (var image in DisplayedImages)
        {
            <div class="image-container">
                <img src="@image.Item1" alt="@image.Item2" class="image-item" />
                <div class="image-description">@image.Item2</div>
            </div>
        }
    </div>
}

@code {
    [Parameter]
    public List<StringTouple> Images { get; set; } = new List<StringTouple>();

    [Parameter]
    public string ImageSize { get; set; } = "400px"; // Default image size

    [Parameter]
    public bool OneSize { get; set; } = false;

    [Parameter]
    public bool Randomize { get; set; } = false;

    [Parameter]
    public int Limit { get; set; } = 0; // 0 means no limit

    private List<StringTouple> DisplayedImages = new List<StringTouple>();

    protected override void OnParametersSet()
    {
        if (Images == null || !Images.Any())
        {
            DisplayedImages = new List<StringTouple>();
            return;
        }

        var imagesToDisplay = Images.ToList(); // Create a copy to avoid modifying the original list

        if (Randomize)
        {
            var rng = new Random();
            imagesToDisplay = imagesToDisplay.OrderBy(_ => rng.Next()).ToList();
        }

        if (Limit > 0 && Limit < imagesToDisplay.Count)
        {
            DisplayedImages = imagesToDisplay.Take(Limit).ToList();
        }
        else
        {
            DisplayedImages = imagesToDisplay;
        }
    }

    private string GetImageStyle()
    {
        return OneSize ? $"width: {ImageSize}; height: {ImageSize}; object-fit: cover;" : $"max-width: {ImageSize};";
    }
}
